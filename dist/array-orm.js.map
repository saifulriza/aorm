{"version":3,"file":"array-orm.js","sources":["../src/index.ts"],"sourcesContent":["/**\r\n * AORM - Active Object Relational Mapping\r\n * A lightweight reactive data management library\r\n */\r\n\r\nclass AORM<T = any> {\r\n  private _data: T[];\r\n  private _subs: Set<Function>;\r\n\r\n  constructor(data: T[] = [] as T[]) {\r\n    this._data = data;\r\n    this._subs = new Set();\r\n  }\r\n\r\n  // Reactive core\r\n  subscribe(callback: (data: T[]) => void) {\r\n    this._subs.add(callback);\r\n    callback(this._data); // emit immediately\r\n    return () => this._subs.delete(callback);\r\n  }\r\n\r\n  private _emit() {\r\n    for (const cb of this._subs) cb(this._data);\r\n  }\r\n\r\n  get() {\r\n    return this._data;\r\n  }\r\n\r\n  set(newData: T[]) {\r\n    this._data = newData;\r\n    this._emit();\r\n  }\r\n\r\n  update(updaterFn: (data: T[]) => T[]) {\r\n    this._data = updaterFn(this._data);\r\n    this._emit();\r\n  }\r\n\r\n  push(item: T) {\r\n    this._data.push(item);\r\n    this._emit();\r\n  }\r\n\r\n  remove(predicateFn: (item: T) => boolean) {\r\n    this._data = this._data.filter((item) => !predicateFn(item));\r\n    this._emit();\r\n  }\r\n\r\n  // Query methods\r\n  where(field: keyof T, condition: any) {\r\n    const predicate =\r\n      typeof condition === \"function\"\r\n        ? (obj: T) => condition(obj[field])\r\n        : (obj: T) => obj[field] === condition;\r\n    return new AORM<T>(this._data.filter(predicate));\r\n  }\r\n\r\n  select<K extends keyof T>(...fields: K[]) {\r\n    return new AORM(\r\n      this._data.map((obj) => {\r\n        const selected = {} as Pick<T, K>;\r\n        for (const f of fields) selected[f] = obj[f];\r\n        return selected;\r\n      })\r\n    );\r\n  }\r\n\r\n  orderBy(field: keyof T, direction: \"asc\" | \"desc\" = \"asc\") {\r\n    return new AORM<T>(\r\n      [...this._data].sort((a, b) => {\r\n        if (a[field] < b[field]) return direction === \"asc\" ? -1 : 1;\r\n        if (a[field] > b[field]) return direction === \"asc\" ? 1 : -1;\r\n        return 0;\r\n      })\r\n    );\r\n  }\r\n\r\n  distinct(field: keyof T) {\r\n    const seen = new Set();\r\n    const filtered = this._data.filter((item) => {\r\n      const val = item[field];\r\n      if (seen.has(val)) return false;\r\n      seen.add(val);\r\n      return true;\r\n    });\r\n    return new AORM<T>(filtered);\r\n  }\r\n\r\n  hasMany<R>(\r\n    relationData: R[],\r\n    localKey: keyof T,\r\n    foreignKey: keyof R,\r\n    alias: string = \"items\"\r\n  ) {\r\n    const relationMap = new Map();\r\n    for (const rel of relationData) {\r\n      const key = rel[foreignKey];\r\n      if (!relationMap.has(key)) relationMap.set(key, []);\r\n      relationMap.get(key).push(rel);\r\n    }\r\n\r\n    const merged = this._data.map((item) => ({\r\n      ...item,\r\n      [alias]: relationMap.get(item[localKey]) || [],\r\n    }));\r\n\r\n    return new AORM(merged);\r\n  }\r\n\r\n  eager<R>(relations: [R[], keyof T, keyof R, string?][]) {\r\n    let result: AORM<T> = this;\r\n    for (const rel of relations) {\r\n      result = result.hasMany<R>(...rel);\r\n    }\r\n    return result;\r\n  }\r\n}\r\n\r\n// ESM export\r\nexport default AORM;\r\n\r\n// For browser/UMD\r\nif (typeof window !== \"undefined\") {\r\n  (window as any).AORM = AORM;\r\n}\r\n\r\n// For Node.js (when imported via require) - this will be correctly handled by Vite\r\nexport { AORM };\r\n"],"names":["AORM","data","callback","cb","newData","updaterFn","item","predicateFn","field","condition","predicate","obj","fields","selected","f","direction","a","b","seen","filtered","val","relationData","localKey","foreignKey","alias","relationMap","rel","key","merged","relations","result"],"mappings":"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"}