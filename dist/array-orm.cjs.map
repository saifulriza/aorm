{"version":3,"file":"array-orm.cjs","sources":["../src/index.ts"],"sourcesContent":["/**\r\n * AORM - Active Object Relational Mapping\r\n * A lightweight reactive data management library\r\n */\r\n\r\nclass AORM<T = any> {\r\n  private _data: T[];\r\n  private _subs: Set<Function>;\r\n\r\n  constructor(data: T[] = [] as T[]) {\r\n    this._data = data;\r\n    this._subs = new Set();\r\n  }\r\n\r\n  // Reactive core\r\n  subscribe(callback: (data: T[]) => void) {\r\n    this._subs.add(callback);\r\n    callback(this._data); // emit immediately\r\n    return () => this._subs.delete(callback);\r\n  }\r\n\r\n  private _emit() {\r\n    for (const cb of this._subs) cb(this._data);\r\n  }\r\n\r\n  get() {\r\n    return this._data;\r\n  }\r\n\r\n  set(newData: T[]) {\r\n    this._data = newData;\r\n    this._emit();\r\n  }\r\n\r\n  update(updaterFn: (data: T[]) => T[]) {\r\n    this._data = updaterFn(this._data);\r\n    this._emit();\r\n  }\r\n\r\n  push(item: T) {\r\n    this._data.push(item);\r\n    this._emit();\r\n  }\r\n\r\n  remove(predicateFn: (item: T) => boolean) {\r\n    this._data = this._data.filter((item) => !predicateFn(item));\r\n    this._emit();\r\n  }\r\n\r\n  // Query methods\r\n  where(field: keyof T, condition: any) {\r\n    const predicate =\r\n      typeof condition === \"function\"\r\n        ? (obj: T) => condition(obj[field])\r\n        : (obj: T) => obj[field] === condition;\r\n    return new AORM<T>(this._data.filter(predicate));\r\n  }\r\n\r\n  select<K extends keyof T>(...fields: K[]) {\r\n    return new AORM(\r\n      this._data.map((obj) => {\r\n        const selected = {} as Pick<T, K>;\r\n        for (const f of fields) selected[f] = obj[f];\r\n        return selected;\r\n      })\r\n    );\r\n  }\r\n\r\n  orderBy(field: keyof T, direction: \"asc\" | \"desc\" = \"asc\") {\r\n    return new AORM<T>(\r\n      [...this._data].sort((a, b) => {\r\n        if (a[field] < b[field]) return direction === \"asc\" ? -1 : 1;\r\n        if (a[field] > b[field]) return direction === \"asc\" ? 1 : -1;\r\n        return 0;\r\n      })\r\n    );\r\n  }\r\n\r\n  distinct(field: keyof T) {\r\n    const seen = new Set();\r\n    const filtered = this._data.filter((item) => {\r\n      const val = item[field];\r\n      if (seen.has(val)) return false;\r\n      seen.add(val);\r\n      return true;\r\n    });\r\n    return new AORM<T>(filtered);\r\n  }\r\n\r\n  hasMany<R>(\r\n    relationData: R[],\r\n    localKey: keyof T,\r\n    foreignKey: keyof R,\r\n    alias: string = \"items\"\r\n  ) {\r\n    const relationMap = new Map();\r\n    for (const rel of relationData) {\r\n      const key = rel[foreignKey];\r\n      if (!relationMap.has(key)) relationMap.set(key, []);\r\n      relationMap.get(key).push(rel);\r\n    }\r\n\r\n    const merged = this._data.map((item) => ({\r\n      ...item,\r\n      [alias]: relationMap.get(item[localKey]) || [],\r\n    }));\r\n\r\n    return new AORM(merged);\r\n  }\r\n\r\n  eager<R>(relations: [R[], keyof T, keyof R, string?][]) {\r\n    let result: AORM<T> = this;\r\n    for (const rel of relations) {\r\n      result = result.hasMany<R>(...rel);\r\n    }\r\n    return result;\r\n  }\r\n}\r\n\r\n// ESM export\r\nexport default AORM;\r\n\r\n// For browser/UMD\r\nif (typeof window !== \"undefined\") {\r\n  (window as any).AORM = AORM;\r\n}\r\n\r\n// For Node.js (when imported via require) - this will be correctly handled by Vite\r\nexport { AORM };\r\n"],"names":["AORM","data","callback","cb","newData","updaterFn","item","predicateFn","field","condition","predicate","obj","fields","selected","f","direction","a","b","seen","filtered","val","relationData","localKey","foreignKey","alias","relationMap","rel","key","merged","relations","result"],"mappings":"4GAKA,MAAMA,CAAc,CACV,MACA,MAER,YAAYC,EAAY,GAAW,CACjC,KAAK,MAAQA,EACR,KAAA,UAAY,GAAI,CAIvB,UAAUC,EAA+B,CAClC,YAAA,MAAM,IAAIA,CAAQ,EACvBA,EAAS,KAAK,KAAK,EACZ,IAAM,KAAK,MAAM,OAAOA,CAAQ,CAAA,CAGjC,OAAQ,CACd,UAAWC,KAAM,KAAK,MAAOA,EAAG,KAAK,KAAK,CAAA,CAG5C,KAAM,CACJ,OAAO,KAAK,KAAA,CAGd,IAAIC,EAAc,CAChB,KAAK,MAAQA,EACb,KAAK,MAAM,CAAA,CAGb,OAAOC,EAA+B,CAC/B,KAAA,MAAQA,EAAU,KAAK,KAAK,EACjC,KAAK,MAAM,CAAA,CAGb,KAAKC,EAAS,CACP,KAAA,MAAM,KAAKA,CAAI,EACpB,KAAK,MAAM,CAAA,CAGb,OAAOC,EAAmC,CACnC,KAAA,MAAQ,KAAK,MAAM,OAAQD,GAAS,CAACC,EAAYD,CAAI,CAAC,EAC3D,KAAK,MAAM,CAAA,CAIb,MAAME,EAAgBC,EAAgB,CACpC,MAAMC,EACJ,OAAOD,GAAc,WAChBE,GAAWF,EAAUE,EAAIH,CAAK,CAAC,EAC/BG,GAAWA,EAAIH,CAAK,IAAMC,EACjC,OAAO,IAAIT,EAAQ,KAAK,MAAM,OAAOU,CAAS,CAAC,CAAA,CAGjD,UAA6BE,EAAa,CACxC,OAAO,IAAIZ,EACT,KAAK,MAAM,IAAKW,GAAQ,CACtB,MAAME,EAAW,CAAC,EAClB,UAAWC,KAAKF,EAAQC,EAASC,CAAC,EAAIH,EAAIG,CAAC,EACpC,OAAAD,CACR,CAAA,CACH,CAAA,CAGF,QAAQL,EAAgBO,EAA4B,MAAO,CACzD,OAAO,IAAIf,EACT,CAAC,GAAG,KAAK,KAAK,EAAE,KAAK,CAACgB,EAAGC,IACnBD,EAAER,CAAK,EAAIS,EAAET,CAAK,EAAUO,IAAc,MAAQ,GAAK,EACvDC,EAAER,CAAK,EAAIS,EAAET,CAAK,EAAUO,IAAc,MAAQ,EAAI,GACnD,CACR,CACH,CAAA,CAGF,SAASP,EAAgB,CACjB,MAAAU,MAAW,IACXC,EAAW,KAAK,MAAM,OAAQb,GAAS,CACrC,MAAAc,EAAMd,EAAKE,CAAK,EACtB,OAAIU,EAAK,IAAIE,CAAG,EAAU,IAC1BF,EAAK,IAAIE,CAAG,EACL,GAAA,CACR,EACM,OAAA,IAAIpB,EAAQmB,CAAQ,CAAA,CAG7B,QACEE,EACAC,EACAC,EACAC,EAAgB,QAChB,CACM,MAAAC,MAAkB,IACxB,UAAWC,KAAOL,EAAc,CACxB,MAAAM,EAAMD,EAAIH,CAAU,EACrBE,EAAY,IAAIE,CAAG,GAAeF,EAAA,IAAIE,EAAK,EAAE,EAClDF,EAAY,IAAIE,CAAG,EAAE,KAAKD,CAAG,CAAA,CAG/B,MAAME,EAAS,KAAK,MAAM,IAAKtB,IAAU,CACvC,GAAGA,EACH,CAACkB,CAAK,EAAGC,EAAY,IAAInB,EAAKgB,CAAQ,CAAC,GAAK,CAAA,CAAC,EAC7C,EAEK,OAAA,IAAItB,EAAK4B,CAAM,CAAA,CAGxB,MAASC,EAA+C,CACtD,IAAIC,EAAkB,KACtB,UAAWJ,KAAOG,EACPC,EAAAA,EAAO,QAAW,GAAGJ,CAAG,EAE5B,OAAAI,CAAA,CAEX,CAMI,OAAO,OAAW,MACnB,OAAe,KAAO9B"}